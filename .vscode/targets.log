make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Fri Jun 17 17:36:09 2022

# Variables

# makefile (from 'Makefile', line 5)
AS = arm-none-eabi-as
# environment
LC_ALL = C
# makefile (from 'Makefile', line 9)
LINKER_SCRIPT = ./linker.ld
# environment
WSLENV = VSCODE_WSL_EXT_LOCATION/up
# makefile (from 'Makefile', line 17)
VPATH = $(SRC_DIR)/boot $(SRC_DIR)/lib $(SRC_DIR)/kernel
# makefile (from 'Makefile', line 12)
SRC_DIR = src
# environment
VSCODE_CWD = /mnt/c/Users/juwon/AppData/Local/Programs/Microsoft VS Code
# default
MAKE_COMMAND := make
# environment
VSCODE_HANDLES_SIGPIPE = true
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from 'Makefile', line 25)
C_OBJS = $(patsubst %.c, build/%.o, $(C_SRCS))
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/juwonpee/projects/miniOS_arm
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
LANG = C
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/local/include /usr/include /usr/include
# makefile (from 'Makefile', line 15)
ASM_OBJS = $(patsubst %.S, build/%.os, $(ASM_SRCS))
# makefile
MAKEFLAGS = pqrR
# makefile
CURDIR := /home/juwonpee/projects/miniOS_arm
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MFLAGS = -pqrR
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 24)
C_SRCS = $(wildcard $(SRC_DIR)/boot/*.c) $(wildcard $(SRC_DIR)/hal/*.c) $(wildcard $(SRC_DIR)/lib/*.c) $(wildcard $(SRC_DIR)/kernel/*.c)
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# automatic
@F = $(notdir $@)
# environment
VSCODE_VERBOSE_LOGGING = true
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 37)
miniOS_arm_bin = build/miniOS_arm.bin
# automatic
*F = $(notdir $*)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
 
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# environment
SHLVL = 0
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /home/juwonpee/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/home/juwonpee/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files/PuTTY/:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/dotnet/:/mnt/c/Users/juwon/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/juwon/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/juwon/AppData/Local/GitHubDesktop/bin:/mnt/c/Users/juwon/.dotnet/tools:/snap/bin
# makefile (from 'Makefile', line 2)
MCPU = cortex-a8
# makefile (from 'Makefile', line 10)
MAP_FILE = build/miniOS_arm.map
# default
MAKEFILES := 
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 14)
ASM_SRCS = $(wildcard $(SRC_DIR)/boot/*.S)
# environment
VSCODE_LOG_NATIVE = false
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# automatic
?F = $(notdir $?)
# makefile (from 'Makefile', line 36)
miniOS_arm = build/miniOS_arm.axf
# environment
NAME = DESKTOP-JL2I687
# environment
HOSTTYPE = x86_64
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# automatic
+F = $(notdir $+)
# environment
WSL_INTEROP = /run/WSL/19304_interop
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = juwonpee
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/juwon/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile
.DEFAULT_GOAL := all
# makefile (from 'Makefile', line 1)
ARCH = armv7-a
# environment
USER = juwonpee
# default
MAKE_VERSION := 4.3
# makefile (from 'Makefile', line 34)
LDFLAGS = -nostartfiles -nostdlib -nodefaultlibs -static -lgcc
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
_ = /home/juwonpee/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/node
# makefile (from 'Makefile', line 32)
CFLAGS = -c -g -std=c11 -mthumb-interwork
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-6f5ae45a-d6bb-4042-8314-61364a14fe09.sock
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/juwonpee
# environment
TERM = xterm-256color
# makefile (from 'Makefile', line 27)
INC_DIRS = -I $(SRC_DIR)/include -I $(SRC_DIR)/hal -I $(SRC_DIR)/lib -I $(SRC_DIR)/kernel
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# makefile (from 'Makefile', line 6)
LD = arm-none-eabi-gcc
# environment
WSL_DISTRO_NAME = Ubuntu-22.04
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# makefile (from 'Makefile', line 4)
CC = arm-none-eabi-gcc
# makefile (from 'Makefile', line 7)
OC = arm-none-eabi-objcopy
# variable set hash-table stats:
# Load=86/1024=8%, Rehash=0, Collisions=2/154=1%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# src/hal (device 2064, inode 83576): 12 files, no impossibilities.
# src/boot/build/src/boot: could not be stat'd.
# src/kernel/build: could not be stat'd.
# src/boot (device 2064, inode 83587): 5 files, no impossibilities.
# src/lib/build: could not be stat'd.
# src/kernel (device 2064, inode 83591): 4 files, no impossibilities.
# . (device 2064, inode 43389): 12 files, no impossibilities.
# src/boot/build: could not be stat'd.
# src/kernel/build/src/boot: could not be stat'd.
# src/lib/build/src/boot: could not be stat'd.
# src/lib (device 2064, inode 83569): 8 files, no impossibilities.

# 41 files, no impossibilities in 11 directories.

# Implicit Rules

build/%.os: %.S
#  recipe to execute (from 'Makefile', line 63):
	mkdir -p $(shell dirname $@)
	$(CC) -march=$(ARCH) -mcpu=$(MCPU) -marm $(INC_DIRS) $(CFLAGS) -o $@ $<
	

build/%.o: %.c
#  recipe to execute (from 'Makefile', line 67):
	mkdir -p $(shell dirname $@)
	$(CC) -march=$(ARCH) -mcpu=$(MCPU) -marm $(INC_DIRS) $(CFLAGS) -o $@ $<
	

# 2 implicit rules, 0 (0.0%) terminal.
# Files

# Not a target:
build/src/lib/asm.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/src/boot/Main.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/src/lib/stdlib.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

kill:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 56):
	kill -9 `ps aux | grep 'qemu' | awk 'NR==1{print $$2}'`
	

# Not a target:
src/boot/Entry.S:
#  Implicit rule search has been done.
#  Last modified 2018-10-27 12:27:00
#  File has been updated.
#  Successfully updated.

debug: build/miniOS_arm.axf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 50):
	qemu-system-arm -M realview-pb-a8 -kernel $(miniOS_arm) -nographic -S -s
	

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-17 17:32:44.2746032
#  File has been updated.
#  Successfully updated.

# Not a target:
build/src/hal/Regs.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/src/hal/Uart.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 44):
	@rm -fr build
	

build/miniOS_arm.axf: build/src/boot/Entry.os build/src/boot/Handler.o build/src/boot/Main.o build/src/hal/Interrupt.o build/src/hal/Regs.o build/src/hal/Timer.o build/src/hal/Uart.o build/src/lib/asm.o build/src/lib/stdio.o build/src/lib/stdlib.o build/src/kernel/task.o linker.ld
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/15=0%
#  recipe to execute (from 'Makefile', line 59):
	$(LD) -n -T $(LINKER_SCRIPT) -o $(miniOS_arm) $(ASM_OBJS) $(C_OBJS) -Wl,-Map=$(MAP_FILE) $(LDFLAGS)
	$(OC) -O binary $(miniOS_arm) $(miniOS_arm_bin)
	

# Not a target:
build/src/hal/Timer.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: build/miniOS_arm.axf
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/15=0%

run: build/miniOS_arm.axf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 47):
	qemu-system-arm -M realview-pb-a8 -kernel $(miniOS_arm) -nographic
	

# Not a target:
linker.ld:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/src/kernel/task.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 71):
	#$(ASM_OBJS)

# Not a target:
build/src/lib/stdio.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/src/hal/Interrupt.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# 'override' directive
build/src/boot/Entry.os: .SHELLSTATUS := 0
build/src/boot/Entry.os: src/boot/Entry.S
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'src/boot/Entry'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := build/src/boot/Entry.os
# automatic
# * := src/boot/Entry
# automatic
# < := src/boot/Entry.S
# automatic
# + := src/boot/Entry.S
# automatic
# % := 
# automatic
# ^ := src/boot/Entry.S
# automatic
# ? := src/boot/Entry.S
# automatic
# | := 
# variable set hash-table stats:
# Load=9/32=28%, Rehash=0, Collisions=7/27=26%
#  recipe to execute (from 'Makefile', line 63):
	mkdir -p $(shell dirname $@)
	$(CC) -march=$(ARCH) -mcpu=$(MCPU) -marm $(INC_DIRS) $(CFLAGS) -o $@ $<
	

# Not a target:
build/src/boot/Handler.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: all clean run debug gdb
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gdb:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 53):
	arm-none-eabi-gdb

# files hash-table stats:
# Load=25/1024=2%, Rehash=0, Collisions=0/72=0%
# VPATH Search Paths

# No 'vpath' search paths.

# General ('VPATH' variable) search path:
# src/boot:src/lib:src/kernel

# strcache buffers: 1 (0) / strings = 74 / storage = 852 B / avg = 11 B
# current buf: size = 8162 B / used = 852 B / count = 74 / avg = 11 B

# strcache performance: lookups = 109 / hit rate = 32%
 
# hash-table stats:
# Load=74/8192=1%, Rehash=0, Collisions=1/109=1%
# Finished Make data base on Fri Jun 17 17:36:09 2022

 
